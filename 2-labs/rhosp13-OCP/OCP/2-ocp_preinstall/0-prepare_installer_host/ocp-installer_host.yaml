---
- hosts: installer
  remote_user: "{{ remote_user_installer }}"

  tasks:
    - name: Ensure api hostname entry is in /etc/hosts
      become: true
      lineinfile:
        dest: /etc/hosts
        line:  "{{ platform.openstack.lbFloatingIP }}\tapi.{{ dns.clusterid }}.{{ dns.domain }}"
        insertbefore: BOF


    - name: Create installation directory
      file:
        path: "{{ install_path }}/install"
        state: directory
        owner: "{{ remote_user_installer }}"
        group: "{{ remote_user_installer }}"

    - name: Create OpenShift artifacts directories
      file:
        path: "{{ install_path }}/artifacts/openshift-{{ item }}-{{ openshift_version }}"
        state: directory
        mode: u+rwx,g-rx,o-rx
        owner: "{{ remote_user_installer }}"
        group: "{{ remote_user_installer }}"
      with_items:
      - installer
      - client
      - images


    - name: Download Openshift installer
      unarchive:
        src: "{{ openshift_location }}/{{ openshift_version }}/openshift-install-linux-{{ openshift_version }}.tar.gz"
        dest: "{{ install_path }}/artifacts/openshift-installer-{{ openshift_version }}/"
        remote_src: yes
        creates: "{{ install_path }}/artifacts/openshift-installer-{{ openshift_version }}/openshift-install"

    - name: Download Openshift client
      unarchive:
        src: "{{ openshift_location }}/{{ openshift_version }}/openshift-client-linux-{{ openshift_version }}.tar.gz"
        dest: "{{ install_path }}/artifacts/openshift-client-{{ openshift_version }}/"
        remote_src: yes
        creates: "{{ install_path }}/artifacts/openshift-client-{{ openshift_version }}/oc"

    - name: Create a symbolic link
      become: yes
      file:
        src: "{{ item.value }}"
        dest: "{{ item.key }}"
        state: link
        force: yes
      with_dict:
        "/usr/local/bin/oc": "{{ install_path }}/artifacts/openshift-client-{{ openshift_version }}/oc"
        "/usr/local/bin/kubectl": "{{ install_path }}/artifacts/openshift-client-{{ openshift_version }}/kubectl"
        "/usr/local/bin/openshift-install": "{{ install_path }}/artifacts/openshift-installer-{{ openshift_version }}/openshift-install"


    - name: Download RHCOS qcow2 image
      shell: |
        curl --compressed -J -L -o {{ install_path }}/artifacts/openshift-images-{{ openshift_version }}/rhcos-{{ coreos_version_minor }}-x86_64-openstack.qcow2 {{ rhcos_location }}/{{ coreos_version }}/latest/rhcos-{{ coreos_version_minor }}-x86_64-openstack.qcow2
        #curl --compressed -J -L -o /opt/openshift-images-{{ openshift_version }}/rhcos-{{ coreos_version_minor }}-x86_64-installer.iso {{ rhcos_location }}/{{ coreos_version }}/latest/rhcos-{{ coreos_version_minor }}-x86_64-installer.iso
        #curl --compressed -J -L -o /opt/openshift-images-{{ openshift_version }}/rhcos-{{ coreos_version_minor }}-x86_64-metal-bios.raw.gz {{ rhcos_location }}/{{ coreos_version }}/latest/rhcos-{{ coreos_version_minor }}-x86_64-metal-bios.raw.gz
        #curl --compressed -J -L -o /opt/openshift-images-{{ openshift_version }}/rhcos-{{ coreos_version_minor }}-x86_64-installer-kernel {{ rhcos_location }}/{{ coreos_version }}/latest/rhcos-{{ coreos_version_minor }}-x86_64-installer-kernel
        #curl --compressed -J -L -o /opt/openshift-images-{{ openshift_version }}/rhcos-{{ coreos_version_minor }}-x86_64-installer-initramfs.img {{ rhcos_location }}/{{ coreos_version }}/latest/rhcos-{{ coreos_version_minor }}-x86_64-installer-initramfs.img
      args:
        warn: false



    - name: Copy install-config.yaml
      copy:
        src: "{{ ocp_local_install_files_path }}/install-config.yaml"
        dest: "{{ install_path }}/install/install-config.yaml"
        owner: "{{ remote_user_installer }}"
        group: "{{ remote_user_installer }}"

    - name: Copy clouds.yaml
      copy:
        src: "{{ ocp_local_install_files_path }}/clouds.yaml"
        dest: "~/clouds.yaml"
        owner: "{{ remote_user_installer }}"
        group: "{{ remote_user_installer }}"



#    - name: Create ignition files
#      shell: |
#        /usr/local/bin/openshift-install create ignition-configs --dir={{ install_path }}/install/





#    - name: Move ignition files to HTTP server
#      shell: |
#        cp {{ install_path }}/*.ign /var/www/html/ignition/
#        restorecon -vR /var/www/html/

#    - name: Upload the compressed metal BIOS file and the kernel and initramfs files to your HTTP server
#      shell: |
#        mkdir -p {{ http_server_path }}/images
#        cp {{ install_path }}/artifacts/openshift-images-{{ openshift_version }}/* {{ http_server_path }}/images/

#    - name: Copy PXE files
#      copy:
#        src: "{{ ocp_local_install_files_path }}/pxe/"
#        dest: "/var/lib/tftpboot/pxelinux.cfg/"
#        mode: '0555'
